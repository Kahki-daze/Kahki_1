filter := func(func_1<Any>:Num,arr_1:Array):Array {
        array_size := size(arr_1) ; 
        arr_2 = Array.new(array_size);
        a := 0;
        b := 0;
        while (lt(a, -(array_size, 1))) {
                    if (func_1(arr_1[a]){
                    Array.fill(arr_2, b, arr_1[a]);
                    b = + (b, 1);
                    }
            a = +(a, 1);
         }
     return arr_2;
     }
$import "/filter/filter.kula"

arr_3 =Array.new(3);
Array.fill(arr_3,0,4);
Array.fill(arr_3,1,7);
Array.fill(arr_3,2,30);
func_3 := func(x:Num):Bool{
   return (lt(x,10));
   }

 arr_4 := filter(func_3,arr_3);
 Shell.println(arr_4);
